name: Update in backend

on:
    push:
        paths:
            - 'backend-instance/**'

jobs:
    Initialization:
        runs-on: ubuntu-latest
        outputs:
          output1: ${{steps.nat.outputs.nat_ip}}
        steps:
        - name: Checkout terraform repo
          uses: actions/checkout@v4
          with:
            repository: jbetueldev/terraforms

        - name: Set up Terraform
          uses: hashicorp/setup-terraform@v3
        
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4.0.2
          with:
            aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
            aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
            aws-region: us-east-1
        
        - name: Spin up NAT-instance
          id: nat
          run: | 
            cd mern-app
            ls
            terraform init
            terraform apply -target=aws_instance.nat_instance -auto-approve
            terraform apply -target=aws_route.outbound_nat_route -auto-approve
            terraform output -raw nat_instance_ip
            echo "nat_ip=$(terraform output -raw nat_instance_ip)" >> "$GITHUB_OUTPUT"
        
        - name: Set up NAT-instance as jump host
          env:
              PRIVATE_KEY: ${{secrets.AWS_KEY_PAIR}}
              NAT_IP: ${{steps.nat.outputs.nat_ip}}
          run: |
            echo "$PRIVATE_KEY" > private_key && chmod 400 private_key
            scp -o StrictHostKeyChecking=no -i private_key /home/runner/work/mern-gallery-sample-app/mern-gallery-sample-app/private_key ec2-user@$NAT_IP:~/

    Update_backend_instance-1:
        runs-on: ubuntu-latest
        needs: Initialization
        steps:
        - name: Connect to NAT-instance > backend-instance-1
          env:
              HOSTNAME: ${{secrets.BACKEND_1_IP}}
              NAT_IP: ${{needs.Initialization.outputs.output1}}
          run: |
            ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=30 -o ServerAliveCountMax=4 -i private_key ec2-user@$NAT_IP -t "
            ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=30 -o ServerAliveCountMax=4 -i private_key ec2-user@${HOSTNAME} -t '
            if [ ! -d "/home/ec2-user/mern-gallery-sample-app" ]; then
                git clone git@github.com:jbetueldev/mern-gallery-sample-app.git
            else
                cd /home/ec2-user/mern-gallery-sample-app/backend-instance
                docker stop backend
                docker rm backend
                docker rmi mern-backend:latest
                cd ..
                git pull origin main
            fi
            cd /home/ec2-user/mern-gallery-sample-app/backend-instance
            docker buildx build -t mern-backend:latest .
            docker run --name backend -p 5000:5000 -d --restart always mern-backend:latest
            docker logs backend
            '"

    Update_backend_instance-2:
        runs-on: ubuntu-latest
        needs: Initialization
        steps:
        - name: Connect to NAT-instance > backend-instance-2
          env:
              HOSTNAME: ${{secrets.BACKEND_2_IP}}
              NAT_IP: ${{needs.Initialization.outputs.output1}}
          run: |
            ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=30 -o ServerAliveCountMax=4 -i private_key ec2-user@$NAT_IP -t "
            ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=30 -o ServerAliveCountMax=4 -i private_key ec2-user@${HOSTNAME} -t '
            if [ ! -d "/home/ec2-user/mern-gallery-sample-app" ]; then
                git clone git@github.com:jbetueldev/mern-gallery-sample-app.git
            else
                cd /home/ec2-user/mern-gallery-sample-app/backend-instance
                docker stop backend
                docker rm backend
                docker rmi mern-backend:latest
                cd ..
                git pull origin main
            fi
            cd /home/ec2-user/mern-gallery-sample-app/backend-instance
            docker buildx build -t mern-backend:latest .
            docker run --name backend -p 5000:5000 -d --restart always mern-backend:latest
            docker logs backend
            '"

    Update_backend_instance-3:
        runs-on: ubuntu-latest
        needs: Initialization
        steps:
        - name: Connect to NAT instance > backend-instance-3
          env:
              HOSTNAME: ${{secrets.BACKEND_3_IP}}
              NAT_IP: ${{needs.Initialization.outputs.output1}}
          run: |
            ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=30 -o ServerAliveCountMax=4 -i private_key ec2-user@$NAT_IP -t "
            ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=30 -o ServerAliveCountMax=4 -i private_key ec2-user@${HOSTNAME} -t '
            if [ ! -d "/home/ec2-user/mern-gallery-sample-app" ]; then
                git clone git@github.com:jbetueldev/mern-gallery-sample-app.git
            else
                cd /home/ec2-user/mern-gallery-sample-app/backend-instance
                docker stop backend
                docker rm backend
                docker rmi mern-backend:latest
                cd ..
                git pull origin main
            fi
            cd /home/ec2-user/mern-gallery-sample-app/backend-instance
            docker buildx build -t mern-backend:latest .
            docker run --name backend -p 5000:5000 -d --restart always mern-backend:latest
            docker logs backend
            '"