name: Update in backend

on:
    push:
        paths:
            - 'backend-instance/**'

jobs:
    Backend-update:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout terraform repo
          uses: actions/checkout@v4
          with:
            repository: jbetueldev/terraforms

        - name: Set up Terraform
          uses: hashicorp/setup-terraform@v3
        
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4.0.2
          with:
            aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
            aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
            aws-region: us-east-1
        
        - name: Spin up NAT instance
          id: nat
          run: | 
            cd mern-app
            ls
            terraform init
            terraform apply -target=aws_instance.nat_instance -auto-approve
            terraform apply -target=aws_route.outbound_nat_route -auto-approve
            terraform output -raw nat_instance_ip
            echo "nat_ip=$(terraform output -raw nat_instance_ip)" >> "$GITHUB_OUTPUT"
        
        - name: Connect to NAT instance / backend-instance-1
          env:
              PRIVATE_KEY: ${{secrets.AWS_KEY_PAIR}}
              HOSTNAME: ${{secrets.BACKEND_1_IP}}
              NAT_IP: ${{ steps.nat.outputs.nat_ip }}
          run: |
            pwd
            scp -o StrictHostKeyChecking=no -i private_key /home/runner/work/mern-gallery-sample-app/mern-gallery-sample-app/mern-app/private_key ec2-user@$NAT_IP:~/
            ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=30 -o ServerAliveCountMax=4 -i private_key ec2-user@$NAT_IP -t "
            ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=30 -o ServerAliveCountMax=4 -i private_key ec2-user@${HOSTNAME} -t '
            if [ ! -d "/home/ec2-user/mern-gallery-sample-app" ]; then
                git clone git@github.com:jbetueldev/mern-gallery-sample-app.git
            else
                cd /home/ec2-user/mern-gallery-sample-app/backend-instance
                docker stop backend
                docker rm backend
                docker rmi mern-backend:latest
                cd ..
                git pull origin main
            fi
            cd /home/ec2-user/mern-gallery-sample-app/backend-instance
            docker buildx build -t mern-backend:latest .
            docker run --name backend -p 5000:5000 -d --restart always mern-backend:latest
            docker logs backend
            '"
            
    #     - name: Spin up NAT instance / Connect to backend-instance-1
    #       env:
    #           PRIVATE_KEY: ${{secrets.AWS_KEY_PAIR}}
    #           HOSTNAME: ${{secrets.BACKEND_1_IP}}
    #       run: | 
    #         cd mern-app
    #         ls
    #         terraform init
    #         terraform apply -target=aws_instance.nat_instance -auto-approve
    #         terraform apply -target=aws_route.outbound_nat_route -auto-approve
    #         terraform output -raw nat_instance_ip > nat.txt
    #         export NAT_IP=$(xargs <nat.txt)
    #         echo $NAT_IP
    #         echo "$PRIVATE_KEY" > private_key && chmod 400 private_key
    #         pwd
    #         scp -o StrictHostKeyChecking=no -i private_key /home/runner/work/mern-gallery-sample-app/mern-gallery-sample-app/mern-app/private_key ec2-user@$NAT_IP:~/
    #         ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=30 -o ServerAliveCountMax=4 -i private_key ec2-user@$NAT_IP -t "
    #         ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=30 -o ServerAliveCountMax=4 -i private_key ec2-user@${HOSTNAME} -t '
    #         if [ ! -d "/home/ec2-user/mern-gallery-sample-app" ]; then
    #             git clone git@github.com:jbetueldev/mern-gallery-sample-app.git
    #         else
    #             cd /home/ec2-user/mern-gallery-sample-app/backend-instance
    #             docker stop backend
    #             docker rm backend
    #             docker rmi mern-backend:latest
    #             cd ..
    #             git pull origin main
    #         fi
    #         cd /home/ec2-user/mern-gallery-sample-app/backend-instance
    #         docker buildx build -t mern-backend:latest .
    #         docker run --name backend -p 5000:5000 -d --restart always mern-backend:latest
    #         docker logs backend
    #         '"

    # Update-the-code-in-backend-instance:
    #     runs-on: ubuntu-latest
    #     needs: Backend-update
    #     steps:
    #     - name: Checkout repo
    #       uses: actions/checkout@v4
    #       with:
    #         path: './backend-instance'
        
    #     - name: Check files
    #       run: ls backend-instance/